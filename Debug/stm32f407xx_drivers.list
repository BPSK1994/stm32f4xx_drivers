
stm32f407xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000634  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007dc  080007e4  000107e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007dc  080007dc  000107e4  2**0
                  CONTENTS
  4 .ARM          00000000  080007dc  080007dc  000107e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007dc  080007e4  000107e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007dc  080007dc  000107dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007e0  080007e0  000107e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000107e4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000107e4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a3c  00000000  00000000  00010814  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000028e  00000000  00000000  00011250  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000114e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  000115a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001419  00000000  00000000  00011638  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000e81  00000000  00000000  00012a51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000573a  00000000  00000000  000138d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001900c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0001905c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080007c4 	.word	0x080007c4

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080007c4 	.word	0x080007c4

080001e8 <delay>:
#include "stm32f407xx.h"
#include "stm32f407xx_gpio_driver.h"
#define HIGH 1
#define BTN_PRESSED HIGH

void delay(void) {
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000/2; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <main>:


int main(void) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GpioBtn;

	// LED
	GpioLed.pGPIOx = GPIOD;
 800021a:	4b1a      	ldr	r3, [pc, #104]	; (8000284 <main+0x70>)
 800021c:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_LOW_SPEED;
 8000226:	2300      	movs	r3, #0
 8000228:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUT_PUSH_PULL;
 800022a:	2300      	movs	r3, #0
 800022c:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4813      	ldr	r0, [pc, #76]	; (8000284 <main+0x70>)
 8000236:	f000 f853 	bl	80002e0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	4618      	mov	r0, r3
 8000240:	f000 f8d4 	bl	80003ec <GPIO_Init>

	// Button
	GpioBtn.pGPIOx = GPIOA;
 8000244:	4b10      	ldr	r3, [pc, #64]	; (8000288 <main+0x74>)
 8000246:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000248:	2300      	movs	r3, #0
 800024a:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IP;
 800024c:	2300      	movs	r3, #0
 800024e:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_LOW_SPEED;
 8000250:	2300      	movs	r3, #0
 8000252:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000254:	2300      	movs	r3, #0
 8000256:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA,ENABLE);
 8000258:	2101      	movs	r1, #1
 800025a:	480b      	ldr	r0, [pc, #44]	; (8000288 <main+0x74>)
 800025c:	f000 f840 	bl	80002e0 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 8000260:	463b      	mov	r3, r7
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f8c2 	bl	80003ec <GPIO_Init>

	while(1) {

		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED) {
 8000268:	2100      	movs	r1, #0
 800026a:	4807      	ldr	r0, [pc, #28]	; (8000288 <main+0x74>)
 800026c:	f000 fa5a 	bl	8000724 <GPIO_ReadFromInputPin>
 8000270:	4603      	mov	r3, r0
 8000272:	2b01      	cmp	r3, #1
 8000274:	d1f8      	bne.n	8000268 <main+0x54>
			delay();
 8000276:	f7ff ffb7 	bl	80001e8 <delay>
			GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800027a:	210c      	movs	r1, #12
 800027c:	4801      	ldr	r0, [pc, #4]	; (8000284 <main+0x70>)
 800027e:	f000 fa67 	bl	8000750 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED) {
 8000282:	e7f1      	b.n	8000268 <main+0x54>
 8000284:	40020c00 	.word	0x40020c00
 8000288:	40020000 	.word	0x40020000

0800028c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800028c:	480d      	ldr	r0, [pc, #52]	; (80002c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000290:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480c      	ldr	r0, [pc, #48]	; (80002c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490d      	ldr	r1, [pc, #52]	; (80002cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0d      	ldr	r2, [pc, #52]	; (80002d0 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0a      	ldr	r2, [pc, #40]	; (80002d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0a      	ldr	r4, [pc, #40]	; (80002d8 <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ba:	f000 fa5f 	bl	800077c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002be:	f7ff ffa9 	bl	8000214 <main>

080002c2 <LoopForever>:

LoopForever:
  b LoopForever
 80002c2:	e7fe      	b.n	80002c2 <LoopForever>
  ldr   r0, =_estack
 80002c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d0:	080007e4 	.word	0x080007e4
  ldr r2, =_sbss
 80002d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d8:	2000001c 	.word	0x2000001c

080002dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002dc:	e7fe      	b.n	80002dc <ADC_IRQHandler>
	...

080002e0 <GPIO_PeriClockControl>:
 *
 * @note               - none

 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t clkStatus) {
 80002e0:	b480      	push	{r7}
 80002e2:	b083      	sub	sp, #12
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
 80002e8:	460b      	mov	r3, r1
 80002ea:	70fb      	strb	r3, [r7, #3]
	if(clkStatus == ENABLE) {
 80002ec:	78fb      	ldrb	r3, [r7, #3]
 80002ee:	2b01      	cmp	r3, #1
 80002f0:	d161      	bne.n	80003b6 <GPIO_PeriClockControl+0xd6>
		if(pGPIOx == GPIOA) {
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a33      	ldr	r2, [pc, #204]	; (80003c4 <GPIO_PeriClockControl+0xe4>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002fa:	4b33      	ldr	r3, [pc, #204]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a32      	ldr	r2, [pc, #200]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000300:	f043 0301 	orr.w	r3, r3, #1
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
		} else {
			// DO LATER
		}

	}
}
 8000306:	e056      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOB) {
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a30      	ldr	r2, [pc, #192]	; (80003cc <GPIO_PeriClockControl+0xec>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000310:	4b2d      	ldr	r3, [pc, #180]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a2c      	ldr	r2, [pc, #176]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000316:	f043 0302 	orr.w	r3, r3, #2
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e04b      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOC) {
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a2b      	ldr	r2, [pc, #172]	; (80003d0 <GPIO_PeriClockControl+0xf0>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000326:	4b28      	ldr	r3, [pc, #160]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a27      	ldr	r2, [pc, #156]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 800032c:	f043 0304 	orr.w	r3, r3, #4
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e040      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOD) {
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a27      	ldr	r2, [pc, #156]	; (80003d4 <GPIO_PeriClockControl+0xf4>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800033c:	4b22      	ldr	r3, [pc, #136]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a21      	ldr	r2, [pc, #132]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000342:	f043 0308 	orr.w	r3, r3, #8
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e035      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOE) {
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a22      	ldr	r2, [pc, #136]	; (80003d8 <GPIO_PeriClockControl+0xf8>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000352:	4b1d      	ldr	r3, [pc, #116]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a1c      	ldr	r2, [pc, #112]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000358:	f043 0310 	orr.w	r3, r3, #16
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e02a      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOF) {
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a1e      	ldr	r2, [pc, #120]	; (80003dc <GPIO_PeriClockControl+0xfc>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000368:	4b17      	ldr	r3, [pc, #92]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a16      	ldr	r2, [pc, #88]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 800036e:	f043 0320 	orr.w	r3, r3, #32
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	e01f      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOG) {
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a19      	ldr	r2, [pc, #100]	; (80003e0 <GPIO_PeriClockControl+0x100>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800037e:	4b12      	ldr	r3, [pc, #72]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a11      	ldr	r2, [pc, #68]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000384:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038a:	e014      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOH) {
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a15      	ldr	r2, [pc, #84]	; (80003e4 <GPIO_PeriClockControl+0x104>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000394:	4b0c      	ldr	r3, [pc, #48]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a0b      	ldr	r2, [pc, #44]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 800039a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a0:	e009      	b.n	80003b6 <GPIO_PeriClockControl+0xd6>
		}else if(pGPIOx == GPIOI) {
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a10      	ldr	r2, [pc, #64]	; (80003e8 <GPIO_PeriClockControl+0x108>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d105      	bne.n	80003b6 <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 80003aa:	4b07      	ldr	r3, [pc, #28]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ae:	4a06      	ldr	r2, [pc, #24]	; (80003c8 <GPIO_PeriClockControl+0xe8>)
 80003b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b6:	bf00      	nop
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40020000 	.word	0x40020000
 80003c8:	40023800 	.word	0x40023800
 80003cc:	40020400 	.word	0x40020400
 80003d0:	40020800 	.word	0x40020800
 80003d4:	40020c00 	.word	0x40020c00
 80003d8:	40021000 	.word	0x40021000
 80003dc:	40021400 	.word	0x40021400
 80003e0:	40021800 	.word	0x40021800
 80003e4:	40021c00 	.word	0x40021c00
 80003e8:	40022000 	.word	0x40022000

080003ec <GPIO_Init>:
 * @note               - none

 */


void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 80003ec:	b480      	push	{r7}
 80003ee:	b087      	sub	sp, #28
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]

	// 1. Configure the mode of the GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	795b      	ldrb	r3, [r3, #5]
 80003fc:	2b03      	cmp	r3, #3
 80003fe:	d81f      	bhi.n	8000440 <GPIO_Init+0x54>

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	795b      	ldrb	r3, [r3, #5]
 8000404:	461a      	mov	r2, r3
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	005b      	lsls	r3, r3, #1
 800040c:	fa02 f303 	lsl.w	r3, r2, r3
 8000410:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	681a      	ldr	r2, [r3, #0]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	4619      	mov	r1, r3
 800041e:	2303      	movs	r3, #3
 8000420:	408b      	lsls	r3, r1
 8000422:	43db      	mvns	r3, r3
 8000424:	4619      	mov	r1, r3
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	400a      	ands	r2, r1
 800042c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Setting
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	6819      	ldr	r1, [r3, #0]
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	697a      	ldr	r2, [r7, #20]
 800043a:	430a      	orrs	r2, r1
 800043c:	601a      	str	r2, [r3, #0]
 800043e:	e0ca      	b.n	80005d6 <GPIO_Init+0x1ea>

	} else {
		// Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	795b      	ldrb	r3, [r3, #5]
 8000444:	2b04      	cmp	r3, #4
 8000446:	d117      	bne.n	8000478 <GPIO_Init+0x8c>
			// 1. Configure the Falling trigger selection register (FTSR)
			EXTI->FTSR = EXTI->FTSR | (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000448:	4b4a      	ldr	r3, [pc, #296]	; (8000574 <GPIO_Init+0x188>)
 800044a:	68db      	ldr	r3, [r3, #12]
 800044c:	687a      	ldr	r2, [r7, #4]
 800044e:	7912      	ldrb	r2, [r2, #4]
 8000450:	4611      	mov	r1, r2
 8000452:	2201      	movs	r2, #1
 8000454:	408a      	lsls	r2, r1
 8000456:	4611      	mov	r1, r2
 8000458:	4a46      	ldr	r2, [pc, #280]	; (8000574 <GPIO_Init+0x188>)
 800045a:	430b      	orrs	r3, r1
 800045c:	60d3      	str	r3, [r2, #12]
			// Clear the corresponding RTSR bit
			EXTI->RTSR = EXTI->RTSR & ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045e:	4b45      	ldr	r3, [pc, #276]	; (8000574 <GPIO_Init+0x188>)
 8000460:	689b      	ldr	r3, [r3, #8]
 8000462:	687a      	ldr	r2, [r7, #4]
 8000464:	7912      	ldrb	r2, [r2, #4]
 8000466:	4611      	mov	r1, r2
 8000468:	2201      	movs	r2, #1
 800046a:	408a      	lsls	r2, r1
 800046c:	43d2      	mvns	r2, r2
 800046e:	4611      	mov	r1, r2
 8000470:	4a40      	ldr	r2, [pc, #256]	; (8000574 <GPIO_Init+0x188>)
 8000472:	400b      	ands	r3, r1
 8000474:	6093      	str	r3, [r2, #8]
 8000476:	e035      	b.n	80004e4 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	795b      	ldrb	r3, [r3, #5]
 800047c:	2b05      	cmp	r3, #5
 800047e:	d117      	bne.n	80004b0 <GPIO_Init+0xc4>
			// 1. Configure the Rising trigger selection register
			EXTI->RTSR = EXTI->RTSR | (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000480:	4b3c      	ldr	r3, [pc, #240]	; (8000574 <GPIO_Init+0x188>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	687a      	ldr	r2, [r7, #4]
 8000486:	7912      	ldrb	r2, [r2, #4]
 8000488:	4611      	mov	r1, r2
 800048a:	2201      	movs	r2, #1
 800048c:	408a      	lsls	r2, r1
 800048e:	4611      	mov	r1, r2
 8000490:	4a38      	ldr	r2, [pc, #224]	; (8000574 <GPIO_Init+0x188>)
 8000492:	430b      	orrs	r3, r1
 8000494:	6093      	str	r3, [r2, #8]
			// Clear the corresponding RTSR bit
			EXTI->FTSR = EXTI->FTSR & ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000496:	4b37      	ldr	r3, [pc, #220]	; (8000574 <GPIO_Init+0x188>)
 8000498:	68db      	ldr	r3, [r3, #12]
 800049a:	687a      	ldr	r2, [r7, #4]
 800049c:	7912      	ldrb	r2, [r2, #4]
 800049e:	4611      	mov	r1, r2
 80004a0:	2201      	movs	r2, #1
 80004a2:	408a      	lsls	r2, r1
 80004a4:	43d2      	mvns	r2, r2
 80004a6:	4611      	mov	r1, r2
 80004a8:	4a32      	ldr	r2, [pc, #200]	; (8000574 <GPIO_Init+0x188>)
 80004aa:	400b      	ands	r3, r1
 80004ac:	60d3      	str	r3, [r2, #12]
 80004ae:	e019      	b.n	80004e4 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	795b      	ldrb	r3, [r3, #5]
 80004b4:	2b06      	cmp	r3, #6
 80004b6:	d115      	bne.n	80004e4 <GPIO_Init+0xf8>
			// 1. Configure the Rising trigger register and Falling trigger register
			EXTI->RTSR = EXTI->RTSR | (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b8:	4b2e      	ldr	r3, [pc, #184]	; (8000574 <GPIO_Init+0x188>)
 80004ba:	689b      	ldr	r3, [r3, #8]
 80004bc:	687a      	ldr	r2, [r7, #4]
 80004be:	7912      	ldrb	r2, [r2, #4]
 80004c0:	4611      	mov	r1, r2
 80004c2:	2201      	movs	r2, #1
 80004c4:	408a      	lsls	r2, r1
 80004c6:	4611      	mov	r1, r2
 80004c8:	4a2a      	ldr	r2, [pc, #168]	; (8000574 <GPIO_Init+0x188>)
 80004ca:	430b      	orrs	r3, r1
 80004cc:	6093      	str	r3, [r2, #8]

			EXTI->FTSR = EXTI->FTSR | (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ce:	4b29      	ldr	r3, [pc, #164]	; (8000574 <GPIO_Init+0x188>)
 80004d0:	68db      	ldr	r3, [r3, #12]
 80004d2:	687a      	ldr	r2, [r7, #4]
 80004d4:	7912      	ldrb	r2, [r2, #4]
 80004d6:	4611      	mov	r1, r2
 80004d8:	2201      	movs	r2, #1
 80004da:	408a      	lsls	r2, r1
 80004dc:	4611      	mov	r1, r2
 80004de:	4a25      	ldr	r2, [pc, #148]	; (8000574 <GPIO_Init+0x188>)
 80004e0:	430b      	orrs	r3, r1
 80004e2:	60d3      	str	r3, [r2, #12]
		}


		// 2. Configure the GPIO port selection in SYSCFG_EXTICR

		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4);
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	089b      	lsrs	r3, r3, #2
 80004ea:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4);
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	791b      	ldrb	r3, [r3, #4]
 80004f0:	f003 0303 	and.w	r3, r3, #3
 80004f4:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a1f      	ldr	r2, [pc, #124]	; (8000578 <GPIO_Init+0x18c>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d04d      	beq.n	800059c <GPIO_Init+0x1b0>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a1d      	ldr	r2, [pc, #116]	; (800057c <GPIO_Init+0x190>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d032      	beq.n	8000570 <GPIO_Init+0x184>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a1c      	ldr	r2, [pc, #112]	; (8000580 <GPIO_Init+0x194>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d02b      	beq.n	800056c <GPIO_Init+0x180>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a1a      	ldr	r2, [pc, #104]	; (8000584 <GPIO_Init+0x198>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d024      	beq.n	8000568 <GPIO_Init+0x17c>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a19      	ldr	r2, [pc, #100]	; (8000588 <GPIO_Init+0x19c>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d01d      	beq.n	8000564 <GPIO_Init+0x178>
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a17      	ldr	r2, [pc, #92]	; (800058c <GPIO_Init+0x1a0>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d016      	beq.n	8000560 <GPIO_Init+0x174>
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a16      	ldr	r2, [pc, #88]	; (8000590 <GPIO_Init+0x1a4>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d00f      	beq.n	800055c <GPIO_Init+0x170>
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a14      	ldr	r2, [pc, #80]	; (8000594 <GPIO_Init+0x1a8>)
 8000542:	4293      	cmp	r3, r2
 8000544:	d008      	beq.n	8000558 <GPIO_Init+0x16c>
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	4a13      	ldr	r2, [pc, #76]	; (8000598 <GPIO_Init+0x1ac>)
 800054c:	4293      	cmp	r3, r2
 800054e:	d101      	bne.n	8000554 <GPIO_Init+0x168>
 8000550:	2308      	movs	r3, #8
 8000552:	e024      	b.n	800059e <GPIO_Init+0x1b2>
 8000554:	2300      	movs	r3, #0
 8000556:	e022      	b.n	800059e <GPIO_Init+0x1b2>
 8000558:	2307      	movs	r3, #7
 800055a:	e020      	b.n	800059e <GPIO_Init+0x1b2>
 800055c:	2306      	movs	r3, #6
 800055e:	e01e      	b.n	800059e <GPIO_Init+0x1b2>
 8000560:	2305      	movs	r3, #5
 8000562:	e01c      	b.n	800059e <GPIO_Init+0x1b2>
 8000564:	2304      	movs	r3, #4
 8000566:	e01a      	b.n	800059e <GPIO_Init+0x1b2>
 8000568:	2303      	movs	r3, #3
 800056a:	e018      	b.n	800059e <GPIO_Init+0x1b2>
 800056c:	2302      	movs	r3, #2
 800056e:	e016      	b.n	800059e <GPIO_Init+0x1b2>
 8000570:	2301      	movs	r3, #1
 8000572:	e014      	b.n	800059e <GPIO_Init+0x1b2>
 8000574:	40013c00 	.word	0x40013c00
 8000578:	40020000 	.word	0x40020000
 800057c:	40020400 	.word	0x40020400
 8000580:	40020800 	.word	0x40020800
 8000584:	40020c00 	.word	0x40020c00
 8000588:	40021000 	.word	0x40021000
 800058c:	40021400 	.word	0x40021400
 8000590:	40021800 	.word	0x40021800
 8000594:	40021c00 	.word	0x40021c00
 8000598:	40022000 	.word	0x40022000
 800059c:	2300      	movs	r3, #0
 800059e:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80005a0:	4b5d      	ldr	r3, [pc, #372]	; (8000718 <GPIO_Init+0x32c>)
 80005a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005a4:	4a5c      	ldr	r2, [pc, #368]	; (8000718 <GPIO_Init+0x32c>)
 80005a6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005aa:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portCode << (temp2 * 4);
 80005ac:	7c7a      	ldrb	r2, [r7, #17]
 80005ae:	7cbb      	ldrb	r3, [r7, #18]
 80005b0:	009b      	lsls	r3, r3, #2
 80005b2:	fa02 f103 	lsl.w	r1, r2, r3
 80005b6:	4a59      	ldr	r2, [pc, #356]	; (800071c <GPIO_Init+0x330>)
 80005b8:	7cfb      	ldrb	r3, [r7, #19]
 80005ba:	3302      	adds	r3, #2
 80005bc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. Enable the EXTI interrupt delivery IMR (Interrupt Mask Register)
		EXTI->IMR = EXTI->IMR | (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c0:	4b57      	ldr	r3, [pc, #348]	; (8000720 <GPIO_Init+0x334>)
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	687a      	ldr	r2, [r7, #4]
 80005c6:	7912      	ldrb	r2, [r2, #4]
 80005c8:	4611      	mov	r1, r2
 80005ca:	2201      	movs	r2, #1
 80005cc:	408a      	lsls	r2, r1
 80005ce:	4611      	mov	r1, r2
 80005d0:	4a53      	ldr	r2, [pc, #332]	; (8000720 <GPIO_Init+0x334>)
 80005d2:	430b      	orrs	r3, r1
 80005d4:	6013      	str	r3, [r2, #0]


	}

	temp = 0;
 80005d6:	2300      	movs	r3, #0
 80005d8:	617b      	str	r3, [r7, #20]

	// 2. Configure the speed

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	799b      	ldrb	r3, [r3, #6]
 80005de:	461a      	mov	r2, r3
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	005b      	lsls	r3, r3, #1
 80005e6:	fa02 f303 	lsl.w	r3, r2, r3
 80005ea:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	689a      	ldr	r2, [r3, #8]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	791b      	ldrb	r3, [r3, #4]
 80005f6:	4619      	mov	r1, r3
 80005f8:	2303      	movs	r3, #3
 80005fa:	408b      	lsls	r3, r1
 80005fc:	43db      	mvns	r3, r3
 80005fe:	4619      	mov	r1, r3
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	400a      	ands	r2, r1
 8000606:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp; // Setting
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	6899      	ldr	r1, [r3, #8]
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	697a      	ldr	r2, [r7, #20]
 8000614:	430a      	orrs	r2, r1
 8000616:	609a      	str	r2, [r3, #8]

	temp = 0;
 8000618:	2300      	movs	r3, #0
 800061a:	617b      	str	r3, [r7, #20]


    // 3. Configure the Pull-up/pull-down settings

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	79db      	ldrb	r3, [r3, #7]
 8000620:	461a      	mov	r2, r3
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	791b      	ldrb	r3, [r3, #4]
 8000626:	005b      	lsls	r3, r3, #1
 8000628:	fa02 f303 	lsl.w	r3, r2, r3
 800062c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	68da      	ldr	r2, [r3, #12]
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	791b      	ldrb	r3, [r3, #4]
 8000638:	4619      	mov	r1, r3
 800063a:	2303      	movs	r3, #3
 800063c:	408b      	lsls	r3, r1
 800063e:	43db      	mvns	r3, r3
 8000640:	4619      	mov	r1, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	400a      	ands	r2, r1
 8000648:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp; // Setting
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	68d9      	ldr	r1, [r3, #12]
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	697a      	ldr	r2, [r7, #20]
 8000656:	430a      	orrs	r2, r1
 8000658:	60da      	str	r2, [r3, #12]

	temp = 0;
 800065a:	2300      	movs	r3, #0
 800065c:	617b      	str	r3, [r7, #20]


	// 4. Configure the output type

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	7a1b      	ldrb	r3, [r3, #8]
 8000662:	461a      	mov	r2, r3
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	791b      	ldrb	r3, [r3, #4]
 8000668:	fa02 f303 	lsl.w	r3, r2, r3
 800066c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	685a      	ldr	r2, [r3, #4]
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	791b      	ldrb	r3, [r3, #4]
 8000678:	4619      	mov	r1, r3
 800067a:	2301      	movs	r3, #1
 800067c:	408b      	lsls	r3, r1
 800067e:	43db      	mvns	r3, r3
 8000680:	4619      	mov	r1, r3
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	400a      	ands	r2, r1
 8000688:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp; // Setting
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	6859      	ldr	r1, [r3, #4]
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	697a      	ldr	r2, [r7, #20]
 8000696:	430a      	orrs	r2, r1
 8000698:	605a      	str	r2, [r3, #4]

	temp = 0;
 800069a:	2300      	movs	r3, #0
 800069c:	617b      	str	r3, [r7, #20]


	//5. Configure the alternate functionality


	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFUNC) {
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	795b      	ldrb	r3, [r3, #5]
 80006a2:	2b02      	cmp	r3, #2
 80006a4:	d131      	bne.n	800070a <GPIO_Init+0x31e>
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	791b      	ldrb	r3, [r3, #4]
 80006aa:	08db      	lsrs	r3, r3, #3
 80006ac:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	791b      	ldrb	r3, [r3, #4]
 80006b2:	f003 0307 	and.w	r3, r3, #7
 80006b6:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // Clearing
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	7c3a      	ldrb	r2, [r7, #16]
 80006be:	3208      	adds	r2, #8
 80006c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006c4:	7bfb      	ldrb	r3, [r7, #15]
 80006c6:	009b      	lsls	r3, r3, #2
 80006c8:	220f      	movs	r2, #15
 80006ca:	fa02 f303 	lsl.w	r3, r2, r3
 80006ce:	43db      	mvns	r3, r3
 80006d0:	4618      	mov	r0, r3
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	7c3a      	ldrb	r2, [r7, #16]
 80006d8:	4001      	ands	r1, r0
 80006da:	3208      	adds	r2, #8
 80006dc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * temp2)); // Setting
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	7c3a      	ldrb	r2, [r7, #16]
 80006e6:	3208      	adds	r2, #8
 80006e8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	7a5b      	ldrb	r3, [r3, #9]
 80006f0:	461a      	mov	r2, r3
 80006f2:	7bfb      	ldrb	r3, [r7, #15]
 80006f4:	009b      	lsls	r3, r3, #2
 80006f6:	fa02 f303 	lsl.w	r3, r2, r3
 80006fa:	4618      	mov	r0, r3
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	7c3a      	ldrb	r2, [r7, #16]
 8000702:	4301      	orrs	r1, r0
 8000704:	3208      	adds	r2, #8
 8000706:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}


}
 800070a:	bf00      	nop
 800070c:	371c      	adds	r7, #28
 800070e:	46bd      	mov	sp, r7
 8000710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000714:	4770      	bx	lr
 8000716:	bf00      	nop
 8000718:	40023800 	.word	0x40023800
 800071c:	40013800 	.word	0x40013800
 8000720:	40013c00 	.word	0x40013c00

08000724 <GPIO_ReadFromInputPin>:

 */



uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber) {
 8000724:	b480      	push	{r7}
 8000726:	b085      	sub	sp, #20
 8000728:	af00      	add	r7, sp, #0
 800072a:	6078      	str	r0, [r7, #4]
 800072c:	460b      	mov	r3, r1
 800072e:	70fb      	strb	r3, [r7, #3]

	uint8_t value;

	value = (uint8_t)((pGPIOx->IDR >> pinNumber) & 0x00000001);
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	691a      	ldr	r2, [r3, #16]
 8000734:	78fb      	ldrb	r3, [r7, #3]
 8000736:	fa22 f303 	lsr.w	r3, r2, r3
 800073a:	b2db      	uxtb	r3, r3
 800073c:	f003 0301 	and.w	r3, r3, #1
 8000740:	73fb      	strb	r3, [r7, #15]

	return value;
 8000742:	7bfb      	ldrb	r3, [r7, #15]
}
 8000744:	4618      	mov	r0, r3
 8000746:	3714      	adds	r7, #20
 8000748:	46bd      	mov	sp, r7
 800074a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074e:	4770      	bx	lr

08000750 <GPIO_ToggleOutputPin>:
 *
 * @note               - none

 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber) {
 8000750:	b480      	push	{r7}
 8000752:	b083      	sub	sp, #12
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
 8000758:	460b      	mov	r3, r1
 800075a:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR = pGPIOx->ODR ^ (1 << pinNumber);
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	695b      	ldr	r3, [r3, #20]
 8000760:	78fa      	ldrb	r2, [r7, #3]
 8000762:	2101      	movs	r1, #1
 8000764:	fa01 f202 	lsl.w	r2, r1, r2
 8000768:	405a      	eors	r2, r3
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	615a      	str	r2, [r3, #20]

}
 800076e:	bf00      	nop
 8000770:	370c      	adds	r7, #12
 8000772:	46bd      	mov	sp, r7
 8000774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000778:	4770      	bx	lr
	...

0800077c <__libc_init_array>:
 800077c:	b570      	push	{r4, r5, r6, lr}
 800077e:	4d0d      	ldr	r5, [pc, #52]	; (80007b4 <__libc_init_array+0x38>)
 8000780:	4c0d      	ldr	r4, [pc, #52]	; (80007b8 <__libc_init_array+0x3c>)
 8000782:	1b64      	subs	r4, r4, r5
 8000784:	10a4      	asrs	r4, r4, #2
 8000786:	2600      	movs	r6, #0
 8000788:	42a6      	cmp	r6, r4
 800078a:	d109      	bne.n	80007a0 <__libc_init_array+0x24>
 800078c:	4d0b      	ldr	r5, [pc, #44]	; (80007bc <__libc_init_array+0x40>)
 800078e:	4c0c      	ldr	r4, [pc, #48]	; (80007c0 <__libc_init_array+0x44>)
 8000790:	f000 f818 	bl	80007c4 <_init>
 8000794:	1b64      	subs	r4, r4, r5
 8000796:	10a4      	asrs	r4, r4, #2
 8000798:	2600      	movs	r6, #0
 800079a:	42a6      	cmp	r6, r4
 800079c:	d105      	bne.n	80007aa <__libc_init_array+0x2e>
 800079e:	bd70      	pop	{r4, r5, r6, pc}
 80007a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80007a4:	4798      	blx	r3
 80007a6:	3601      	adds	r6, #1
 80007a8:	e7ee      	b.n	8000788 <__libc_init_array+0xc>
 80007aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ae:	4798      	blx	r3
 80007b0:	3601      	adds	r6, #1
 80007b2:	e7f2      	b.n	800079a <__libc_init_array+0x1e>
 80007b4:	080007dc 	.word	0x080007dc
 80007b8:	080007dc 	.word	0x080007dc
 80007bc:	080007dc 	.word	0x080007dc
 80007c0:	080007e0 	.word	0x080007e0

080007c4 <_init>:
 80007c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007c6:	bf00      	nop
 80007c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ca:	bc08      	pop	{r3}
 80007cc:	469e      	mov	lr, r3
 80007ce:	4770      	bx	lr

080007d0 <_fini>:
 80007d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007d2:	bf00      	nop
 80007d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007d6:	bc08      	pop	{r3}
 80007d8:	469e      	mov	lr, r3
 80007da:	4770      	bx	lr
